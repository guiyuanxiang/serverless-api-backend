"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.handler = void 0;
const client_dynamodb_1 = require("@aws-sdk/client-dynamodb");
const nanoid_1 = require("nanoid");
// https://github.com/ai/nanoid/issues/422
const tableName = process.env.SAMPLE_TABLE || '';
// 创建 DynamoDB 客户端实例
const dynamoDBClient = new client_dynamodb_1.DynamoDBClient({});
const handler = async (event = {}) => {
    if (!event.body) {
        return { statusCode: 400, body: 'invalid request, you are missing the parameter body' };
    }
    const item = typeof event.body == 'object' ? event.body : JSON.parse(event.body);
    const id = (0, nanoid_1.nanoid)();
    console.log(id);
    item['id'] = id;
    console.log(item);
    console.log(tableName);
    const params = {
        TableName: tableName,
        Item: {
            id: { S: item['id'] },
            input: { S: item['input'] },
            filename: { S: item['filename'] },
        }
    };
    const command = new client_dynamodb_1.PutItemCommand(params);
    await dynamoDBClient.send(command);
    return { statusCode: 201, body: '' };
};
exports.handler = handler;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3JlYXRlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiY3JlYXRlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFBLDhEQUF3RTtBQUN4RSxtQ0FBOEI7QUFDOUIsMENBQTBDO0FBRTFDLE1BQU0sU0FBUyxHQUFHLE9BQU8sQ0FBQyxHQUFHLENBQUMsWUFBWSxJQUFJLEVBQUUsQ0FBQztBQUVqRCxvQkFBb0I7QUFDcEIsTUFBTSxjQUFjLEdBQUcsSUFBSSxnQ0FBYyxDQUFDLEVBQUUsQ0FBQyxDQUFDO0FBQ3ZDLE1BQU0sT0FBTyxHQUFHLEtBQUssRUFBRSxRQUFhLEVBQUUsRUFBZ0IsRUFBRTtJQUUzRCxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksRUFBRTtRQUNiLE9BQU8sRUFBQyxVQUFVLEVBQUUsR0FBRyxFQUFFLElBQUksRUFBRSxxREFBcUQsRUFBQyxDQUFDO0tBQ3pGO0lBQ0QsTUFBTSxJQUFJLEdBQUcsT0FBTyxLQUFLLENBQUMsSUFBSSxJQUFJLFFBQVEsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDakYsTUFBTSxFQUFFLEdBQUcsSUFBQSxlQUFNLEdBQUUsQ0FBQztJQUNwQixPQUFPLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxDQUFDO0lBQ2hCLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxFQUFFLENBQUM7SUFDaEIsT0FBTyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUNsQixPQUFPLENBQUMsR0FBRyxDQUFDLFNBQVMsQ0FBQyxDQUFDO0lBQ3ZCLE1BQU0sTUFBTSxHQUFHO1FBQ1gsU0FBUyxFQUFFLFNBQVM7UUFDcEIsSUFBSSxFQUFFO1lBQ0YsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLElBQUksQ0FBQyxJQUFJLENBQUMsRUFBRTtZQUNyQixLQUFLLEVBQUUsRUFBRSxDQUFDLEVBQUUsSUFBSSxDQUFDLE9BQU8sQ0FBQyxFQUFFO1lBQzNCLFFBQVEsRUFBRSxFQUFFLENBQUMsRUFBRSxJQUFJLENBQUMsVUFBVSxDQUFDLEVBQUU7U0FDcEM7S0FDSixDQUFDO0lBQ0YsTUFBTSxPQUFPLEdBQUcsSUFBSSxnQ0FBYyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQzNDLE1BQU0sY0FBYyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUNuQyxPQUFPLEVBQUMsVUFBVSxFQUFFLEdBQUcsRUFBRSxJQUFJLEVBQUUsRUFBRSxFQUFDLENBQUM7QUFDdkMsQ0FBQyxDQUFDO0FBdEJXLFFBQUEsT0FBTyxXQXNCbEIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0R5bmFtb0RCQ2xpZW50LCBQdXRJdGVtQ29tbWFuZH0gZnJvbSAnQGF3cy1zZGsvY2xpZW50LWR5bmFtb2RiJztcbmltcG9ydCB7bmFub2lkfSBmcm9tICduYW5vaWQnO1xuLy8gaHR0cHM6Ly9naXRodWIuY29tL2FpL25hbm9pZC9pc3N1ZXMvNDIyXG5cbmNvbnN0IHRhYmxlTmFtZSA9IHByb2Nlc3MuZW52LlNBTVBMRV9UQUJMRSB8fCAnJztcblxuLy8g5Yib5bu6IER5bmFtb0RCIOWuouaIt+err+WunuS+i1xuY29uc3QgZHluYW1vREJDbGllbnQgPSBuZXcgRHluYW1vREJDbGllbnQoe30pO1xuZXhwb3J0IGNvbnN0IGhhbmRsZXIgPSBhc3luYyAoZXZlbnQ6IGFueSA9IHt9KTogUHJvbWlzZTxhbnk+ID0+IHtcblxuICAgIGlmICghZXZlbnQuYm9keSkge1xuICAgICAgICByZXR1cm4ge3N0YXR1c0NvZGU6IDQwMCwgYm9keTogJ2ludmFsaWQgcmVxdWVzdCwgeW91IGFyZSBtaXNzaW5nIHRoZSBwYXJhbWV0ZXIgYm9keSd9O1xuICAgIH1cbiAgICBjb25zdCBpdGVtID0gdHlwZW9mIGV2ZW50LmJvZHkgPT0gJ29iamVjdCcgPyBldmVudC5ib2R5IDogSlNPTi5wYXJzZShldmVudC5ib2R5KTtcbiAgICBjb25zdCBpZCA9IG5hbm9pZCgpO1xuICAgIGNvbnNvbGUubG9nKGlkKTtcbiAgICBpdGVtWydpZCddID0gaWQ7XG4gICAgY29uc29sZS5sb2coaXRlbSk7XG4gICAgY29uc29sZS5sb2codGFibGVOYW1lKTtcbiAgICBjb25zdCBwYXJhbXMgPSB7XG4gICAgICAgIFRhYmxlTmFtZTogdGFibGVOYW1lLFxuICAgICAgICBJdGVtOiB7XG4gICAgICAgICAgICBpZDogeyBTOiBpdGVtWydpZCddIH0sIC8vIOabv+aNouS4uuWUr+S4gOeahOS4u+mUruWAvFxuICAgICAgICAgICAgaW5wdXQ6IHsgUzogaXRlbVsnaW5wdXQnXSB9LCAvLyDmj5LlhaUgaW5wdXQg5a2X5q615pWw5o2uXG4gICAgICAgICAgICBmaWxlbmFtZTogeyBTOiBpdGVtWydmaWxlbmFtZSddIH0sXG4gICAgICAgIH1cbiAgICB9O1xuICAgIGNvbnN0IGNvbW1hbmQgPSBuZXcgUHV0SXRlbUNvbW1hbmQocGFyYW1zKTtcbiAgICBhd2FpdCBkeW5hbW9EQkNsaWVudC5zZW5kKGNvbW1hbmQpO1xuICAgIHJldHVybiB7c3RhdHVzQ29kZTogMjAxLCBib2R5OiAnJ307XG59OyJdfQ==