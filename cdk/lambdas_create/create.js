"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.handler = void 0;
const client_dynamodb_1 = require("@aws-sdk/client-dynamodb");
const nanoid_1 = require("nanoid");
// https://github.com/ai/nanoid/issues/422
const tableName = process.env.SAMPLE_TABLE || '';
// 创建 DynamoDB 客户端实例
const dynamoDBClient = new client_dynamodb_1.DynamoDBClient({});
const handler = async (event = {}) => {
    if (!event.body) {
        return { statusCode: 400, body: 'invalid request, you are missing the parameter body' };
    }
    const item = typeof event.body == 'object' ? event.body : JSON.parse(event.body);
    const id = (0, nanoid_1.nanoid)();
    console.log(id);
    item['id'] = id;
    console.log(item);
    console.log(tableName);
    const params = {
        TableName: tableName,
        Item: {
            id: { S: item['id'] },
            input_text: { S: item['input_text'] },
            input_file_path: { S: item['input_file_path'] },
        }
    };
    const command = new client_dynamodb_1.PutItemCommand(params);
    await dynamoDBClient.send(command);
    return { statusCode: 201, body: '' };
};
exports.handler = handler;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3JlYXRlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiY3JlYXRlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFBLDhEQUF3RTtBQUN4RSxtQ0FBOEI7QUFDOUIsMENBQTBDO0FBRTFDLE1BQU0sU0FBUyxHQUFHLE9BQU8sQ0FBQyxHQUFHLENBQUMsWUFBWSxJQUFJLEVBQUUsQ0FBQztBQUVqRCxvQkFBb0I7QUFDcEIsTUFBTSxjQUFjLEdBQUcsSUFBSSxnQ0FBYyxDQUFDLEVBQUUsQ0FBQyxDQUFDO0FBQ3ZDLE1BQU0sT0FBTyxHQUFHLEtBQUssRUFBRSxRQUFhLEVBQUUsRUFBZ0IsRUFBRTtJQUUzRCxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksRUFBRTtRQUNiLE9BQU8sRUFBQyxVQUFVLEVBQUUsR0FBRyxFQUFFLElBQUksRUFBRSxxREFBcUQsRUFBQyxDQUFDO0tBQ3pGO0lBQ0QsTUFBTSxJQUFJLEdBQUcsT0FBTyxLQUFLLENBQUMsSUFBSSxJQUFJLFFBQVEsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDakYsTUFBTSxFQUFFLEdBQUcsSUFBQSxlQUFNLEdBQUUsQ0FBQztJQUNwQixPQUFPLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxDQUFDO0lBQ2hCLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxFQUFFLENBQUM7SUFDaEIsT0FBTyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUNsQixPQUFPLENBQUMsR0FBRyxDQUFDLFNBQVMsQ0FBQyxDQUFDO0lBQ3ZCLE1BQU0sTUFBTSxHQUFHO1FBQ1gsU0FBUyxFQUFFLFNBQVM7UUFDcEIsSUFBSSxFQUFFO1lBQ0YsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLElBQUksQ0FBQyxJQUFJLENBQUMsRUFBRTtZQUNyQixVQUFVLEVBQUUsRUFBRSxDQUFDLEVBQUUsSUFBSSxDQUFDLFlBQVksQ0FBQyxFQUFFO1lBQ3JDLGVBQWUsRUFBRSxFQUFFLENBQUMsRUFBRSxJQUFJLENBQUMsaUJBQWlCLENBQUMsRUFBRTtTQUNsRDtLQUNKLENBQUM7SUFDRixNQUFNLE9BQU8sR0FBRyxJQUFJLGdDQUFjLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDM0MsTUFBTSxjQUFjLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQ25DLE9BQU8sRUFBQyxVQUFVLEVBQUUsR0FBRyxFQUFFLElBQUksRUFBRSxFQUFFLEVBQUMsQ0FBQztBQUN2QyxDQUFDLENBQUM7QUF0QlcsUUFBQSxPQUFPLFdBc0JsQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7RHluYW1vREJDbGllbnQsIFB1dEl0ZW1Db21tYW5kfSBmcm9tICdAYXdzLXNkay9jbGllbnQtZHluYW1vZGInO1xuaW1wb3J0IHtuYW5vaWR9IGZyb20gJ25hbm9pZCc7XG4vLyBodHRwczovL2dpdGh1Yi5jb20vYWkvbmFub2lkL2lzc3Vlcy80MjJcblxuY29uc3QgdGFibGVOYW1lID0gcHJvY2Vzcy5lbnYuU0FNUExFX1RBQkxFIHx8ICcnO1xuXG4vLyDliJvlu7ogRHluYW1vREIg5a6i5oi356uv5a6e5L6LXG5jb25zdCBkeW5hbW9EQkNsaWVudCA9IG5ldyBEeW5hbW9EQkNsaWVudCh7fSk7XG5leHBvcnQgY29uc3QgaGFuZGxlciA9IGFzeW5jIChldmVudDogYW55ID0ge30pOiBQcm9taXNlPGFueT4gPT4ge1xuXG4gICAgaWYgKCFldmVudC5ib2R5KSB7XG4gICAgICAgIHJldHVybiB7c3RhdHVzQ29kZTogNDAwLCBib2R5OiAnaW52YWxpZCByZXF1ZXN0LCB5b3UgYXJlIG1pc3NpbmcgdGhlIHBhcmFtZXRlciBib2R5J307XG4gICAgfVxuICAgIGNvbnN0IGl0ZW0gPSB0eXBlb2YgZXZlbnQuYm9keSA9PSAnb2JqZWN0JyA/IGV2ZW50LmJvZHkgOiBKU09OLnBhcnNlKGV2ZW50LmJvZHkpO1xuICAgIGNvbnN0IGlkID0gbmFub2lkKCk7XG4gICAgY29uc29sZS5sb2coaWQpO1xuICAgIGl0ZW1bJ2lkJ10gPSBpZDtcbiAgICBjb25zb2xlLmxvZyhpdGVtKTtcbiAgICBjb25zb2xlLmxvZyh0YWJsZU5hbWUpO1xuICAgIGNvbnN0IHBhcmFtcyA9IHtcbiAgICAgICAgVGFibGVOYW1lOiB0YWJsZU5hbWUsXG4gICAgICAgIEl0ZW06IHtcbiAgICAgICAgICAgIGlkOiB7IFM6IGl0ZW1bJ2lkJ10gfSwgLy8g5pu/5o2i5Li65ZSv5LiA55qE5Li76ZSu5YC8XG4gICAgICAgICAgICBpbnB1dF90ZXh0OiB7IFM6IGl0ZW1bJ2lucHV0X3RleHQnXSB9LCAvLyDmj5LlhaUgaW5wdXQg5a2X5q615pWw5o2uXG4gICAgICAgICAgICBpbnB1dF9maWxlX3BhdGg6IHsgUzogaXRlbVsnaW5wdXRfZmlsZV9wYXRoJ10gfSxcbiAgICAgICAgfVxuICAgIH07XG4gICAgY29uc3QgY29tbWFuZCA9IG5ldyBQdXRJdGVtQ29tbWFuZChwYXJhbXMpO1xuICAgIGF3YWl0IGR5bmFtb0RCQ2xpZW50LnNlbmQoY29tbWFuZCk7XG4gICAgcmV0dXJuIHtzdGF0dXNDb2RlOiAyMDEsIGJvZHk6ICcnfTtcbn07Il19